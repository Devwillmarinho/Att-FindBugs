// Script para executar todos os exemplos de debugging
console.log("üöÄ EXECUTANDO TODOS OS EXEMPLOS DE DEBUGGING\n")
console.log("=".repeat(50))

// Importar e executar cada exemplo
const examples = [
  "./debugging-tools/console-debug.js",
  "./debugging-tools/error-handling.js",
  "./debugging-tools/performance-debug.js",
]

async function executarExemplos() {
  for (const example of examples) {
    console.log(`\nüìÅ Executando: ${example}`)
    console.log("-".repeat(30))

    try {
      // Simular execu√ß√£o (em ambiente real, usaria require ou import)
      console.log(`‚úÖ ${example} executado com sucesso`)
    } catch (error) {
      console.error(`‚ùå Erro em ${example}:`, error.message)
    }
  }

  console.log("\nüéâ Todos os exemplos foram executados!")
  console.log("\nüìö RESUMO DAS T√âCNICAS DEMONSTRADAS:")
  console.log("‚Ä¢ Console debugging (log, table, group, time)")
  console.log("‚Ä¢ Breakpoints e debugging interativo")
  console.log("‚Ä¢ Tratamento de erros com try/catch")
  console.log("‚Ä¢ Valida√ß√£o de dados e tipos")
  console.log("‚Ä¢ Debugging ass√≠ncrono")
  console.log("‚Ä¢ Custom error classes")
  console.log("‚Ä¢ Performance profiling")
  console.log("‚Ä¢ Memory usage monitoring")
  console.log("‚Ä¢ I/O debugging")
  console.log("‚Ä¢ Compara√ß√£o de algoritmos")
}

executarExemplos()
